{"version":3,"sources":["Container/Container.module.css","Filter/Filter.js","ContactsList/ContactsList.js","ContactForm/ContactForm.js","Container/Container.js","PhoneBook/PhoneBook.js","App.js","index.js","ContactForm/ContactForm.module.css","ContactsList/ContactsList.module.css","Filter/Filter.module.css"],"names":["module","exports","Filter","className","styles","FilterDiv","FindTitle","onChange","this","props","filterContactsByName","value","name","required","Component","ContactsList","contacts","map","contact","ContactListItem","number","Delete","onClick","deleteContact","id","type","uuidv4","ContactForm","state","resetInput","setState","handleChangeInState","e","target","addContact","preventDefault","user","filter","toLowerCase","length","alert","push","updateState","onSubmit","InputsDiv","LabelContactForm","Input","pattern","title","placeholder","Container","children","PhoneBook","filtredContacts","handleState","filteredContacts","result","includes","prevState","data","prevProps","console","log","localStorage","setItem","JSON","stringify","localStorageContacts","parse","getItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.555afa40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3ckO6\"};","import { Component } from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.FilterDiv}>\r\n        <p className={styles.FindTitle}>Find contacts by name</p>\r\n        <input\r\n          onChange={this.props.filterContactsByName}\r\n          value={this.props.value}\r\n          name={this.props.name}\r\n          required\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterContactsByName: PropTypes.func,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css';\r\n\r\nclass ContactsList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={styles.ContactsList}>\r\n        {this.props.contacts.map(contact => {\r\n          return (\r\n            <li className={styles.ContactListItem} key={uuidv4()}>\r\n              {contact.name}: {contact.number}\r\n              <button\r\n                className={styles.Delete}\r\n                onClick={() => this.props.deleteContact(contact.id)}\r\n                type=\"button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handleChangeInState = e => {\r\n    const { value, name } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  addContact = e => {\r\n    e.preventDefault();\r\n    const user = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    const ifThereIsSuchContact = this.props.contacts.filter(contact => {\r\n      return contact.name.toLowerCase() === this.state.name.toLowerCase();\r\n    });\r\n\r\n    if (ifThereIsSuchContact.length !== 0) {\r\n      return alert(`${this.state.name} already exists`);\r\n    }\r\n\r\n    this.props.contacts.push(user);\r\n    this.props.updateState(this.props.contacts);\r\n    this.resetInput();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.addContact} className={styles.ContactForm}>\r\n        <h1>Phonebook</h1>\r\n        <div className={styles.InputsDiv}>\r\n          <label className={styles.LabelContactForm}>\r\n            Name{' '}\r\n            <input\r\n              className={styles.Input}\r\n              onChange={this.handleChangeInState}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              placeholder=\"Name Surname\"\r\n            />\r\n          </label>\r\n          <label className={styles.LabelContactForm}>\r\n            Number\r\n            <input\r\n              className={styles.Input}\r\n              onChange={this.handleChangeInState}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"+111-11-111-111\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","// import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.Container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","// import { v4 as uuidv4 } from 'uuid';\r\nimport { Component } from 'react';\r\nimport Filter from '../Filter';\r\nimport ContactsList from '../ContactsList';\r\nimport ContactForm from '../ContactForm';\r\nimport Container from '../Container';\r\n\r\nclass PhoneBook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    filtredContacts: [],\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log('prevProps:', prevProps);\r\n    console.log('prevState:', prevState);\r\n    console.log('this.state.contacts', this.state.contacts);\r\n\r\n    // if (prevState.contacts !== this.state.contacts) - так не работает локал сторадж. тк первый раз получается что prevState=this.state.contacts и оно не сохраняет\r\n\r\n    if (this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const localStorageContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    this.setState({\r\n      contacts: localStorageContacts,\r\n    });\r\n  }\r\n\r\n  handleState = e => {\r\n    const { value } = e.target;\r\n    this.setState({\r\n      filter: value,\r\n    });\r\n\r\n    // console.log('value', value);\r\n  };\r\n\r\n  filterContactsByName = e => {\r\n    this.handleState(e);\r\n\r\n    if (this.state.filter !== '') {\r\n      const result = this.state.contacts.filter(contact => {\r\n        return contact.name\r\n          .toLowerCase()\r\n          .includes(this.state.filter.toLowerCase());\r\n      });\r\n      this.setState({ filteredContacts: result });\r\n      return;\r\n    }\r\n    this.setState({ filteredContacts: [] });\r\n\r\n    // console.log('state', this.state.filter);\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  updateState = data => {\r\n    this.setState({\r\n      contacts: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <ContactForm\r\n          updateState={this.updateState}\r\n          handleChangeInState={this.handleChangeInState}\r\n          addContact={this.addContact}\r\n          contacts={this.state.contacts}\r\n        />\r\n        <h1>Contacts</h1>\r\n        <Filter\r\n          filterContactsByName={this.filterContactsByName}\r\n          name=\"filter\"\r\n          value={this.state.filter}\r\n        />\r\n        <ContactsList\r\n          filtredContacts={this.state.filtredContacts}\r\n          contacts={\r\n            this.state.filter !== ''\r\n              ? this.state.filteredContacts\r\n              : this.state.contacts\r\n          }\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhoneBook;\r\n","import PhoneBook from './PhoneBook';\n\nfunction App() {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1sTyg\",\"InputsDiv\":\"ContactForm_InputsDiv__eRAp_\",\"Input\":\"ContactForm_Input__3NKb0\",\"LabelContactForm\":\"ContactForm_LabelContactForm__18zYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__2uJAo\",\"ContactListItem\":\"ContactsList_ContactListItem__397fS\",\"Delete\":\"ContactsList_Delete__32z3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FindTitle\":\"Filter_FindTitle__14t1X\",\"FilterDiv\":\"Filter_FilterDiv__1O-M5\"};"],"sourceRoot":""}